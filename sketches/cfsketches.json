cloud/aws_ec2 {"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"count","type":"string"},{"name":"ami","type":"string"},{"default":"us-east-1","name":"region","type":"string"},{"default":"t1.micro","name":"type","type":"string"},{"description":"Logical class to assign to machines","name":"class","type":"string"},{"name":"install_cfengine","type":"boolean"},{"description":"Hub from which the instances should bootstrap","name":"hub","type":"string"},{"description":"Options: security_group, netrc, ssh_pub_key.","name":"options","type":"array"},{"name":"instance_count","type":"return"}]},"interface":["main.cf"],"manifest":{"README.include":{"documentation":true},"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo of EC2 integration"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"Cloud::Services::Common":{},"cfengine":{"version":"3.5.0"}},"description":"Manage AWS EC2 services","license":"MIT","name":"Cloud::Services::AWS::EC2","tags":["cfdc","cloud","aws","ec2"],"version":1},"namespace":"cfdc_aws_ec2"}
cloud/aws_s3 {"api":{"clear":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"clear_bucket","type":"string"},{"name":"options","type":"array"}],"sync":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"directory","type":"string"},{"name":"bucket","type":"string"},{"name":"options","type":"array"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo of S3 integration"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"Cloud::Services::Common":{},"cfengine":{"version":"3.5.0"},"os":{"linux":"All Linux distributions"}},"description":"Manage AWS S3 buckets","license":"MIT","name":"Cloud::Services::AWS::S3","tags":["cfdc","cloud","aws","s3","enterprise_compatible"],"version":1},"namespace":"cfdc_aws_s3"}
cloud/cloud_common {"api":{},"interface":["library.cf"],"manifest":{"README.md":{"documentation":true},"library.cf":{"desc":"main library"},"scripts/aws":{"comment":"AWS interface to start/stop service","license":"GPL","perm":755},"scripts/shim.pl":{"comment":"AWS and OpenStack shim","perm":755}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"cfengine":{"version":"3.5.0"},"os":{"linux":"All Linux distributions"}},"description":"Common library for cloud services","license":"MIT","name":"Cloud::Services::Common","tags":["cfdc","cloud","aws","openstack","enterprise_compatible"],"version":1}}
cloud/openstack {"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"count","type":"string"},{"description":"Logical class to assign to machines","name":"class","type":"string"},{"name":"install_cfengine","type":"boolean"},{"description":"Hub from which the instances should bootstrap","name":"hub","type":"string"},{"description":"Options: security_group, netrc, ssh_pub_key.","name":"options","type":"array"},{"name":"instance_count","type":"return"}]},"interface":["main.cf"],"manifest":{"README.include":{"documentation":true},"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo of OpenStack integration"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"Cloud::Services::Common":{},"cfengine":{"version":"3.5.0"}},"description":"Manage OpenStack services","license":"MIT","name":"Cloud::Services::OpenStack","tags":["cfdc","cloud","openstack"],"version":1},"namespace":"cfdc_cloud_openstack"}
cloud/vmware {"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"description":"Number of VMs you want to ensure are running.","name":"count","type":"string"},{"description":"Logical class to assign to the created virtual machines","name":"class","type":"string"},{"description":"Whether CFEngine should be installed on the new VMs","name":"install_cfengine","type":"boolean"},{"description":"Hub from which the instances should bootstrap","name":"hub","type":"string"},{"description":"Command to start some VMs.  Parameters: COUNT CLASS HUB INSTALL_CFENGINE","name":"start_command","type":"string"},{"description":"Command to stop some VMs.  Parameters: COUNT CLASS","name":"stop_command","type":"string"},{"description":"Command to count VMs.  Parameters: CLASS","name":"count_command","type":"string"},{"default":{},"description":"Options","name":"options","type":"array"},{"name":"instance_count","type":"return"}]},"interface":["main.cf"],"manifest":{"README.include":{"documentation":true},"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo of VMWare integration through the vSphere Perl SDK"},"scripts/cf3vmware":{"comment":"VMWare shim","perm":755}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"bundle_descriptions":{"ensure":"Ensure a specific number of VMs are running, starting or stopping them as needed through custom scripts."},"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":110},"cfengine":{"version":"3.5.0"},"os":[{"linux":"All Linux distributions","windows":"All Windows versions"}]},"description":"Manage VMWare services through the vSphere Perl SDK and other external tools.","license":"MIT","name":"Cloud::Services::VMWare","tags":["cfdc","cloud","vmware","vcli","enterprise_compatible"],"version":1},"namespace":"cfdc_cloud_vmware"}
demo/simpleapplication {"api":{"configure":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"}]},"interface":["balance.cf"],"manifest":{"README.md":{"documentation":true},"balance.cf":{"desc":"main file"}},"metadata":{"authors":["Nick Anderson <nick.anderson@cfengine.com>","Ted Zlatanov <ted.zlatanov@cfengine.com>","Diego Zamboni <diego.zamboni@cfengine.com>"],"depends":{"cfengine":{"version":"3.5.0"},"os":[{"centos":"CentOS Linux"}]},"description":"Configures hosts for a simple application consisting of webworkers (Apache + simple static content), haworkers (haproxy dynamically configured to use the existing webworkers) and mcworkers (memcached)","license":"MIT","name":"Demo::SimpleApplication","tags":["vmworld2013","demo","sketchify_generated","enterprise_compatible"],"version":"1.0"},"namespace":"cfdc_simpleapplication"}
demo/simpleapplication-deploy {"api":{"deploy":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"description":"Number of web workers","name":"workers","type":"string"},{"default":"vmware","description":"Type of deployment: ec2 or openstack or vmware","name":"type","type":"string","validation":"CLOUD_PLATFORM"},{"default":true,"description":"Enable this deployment? (if disabled, destroy the VMs)","name":"enable","type":"boolean"}]},"interface":["deploy.cf"],"manifest":{"README.md":{"documentation":true},"deploy.cf":{"desc":"main file"},"params/demo.json":{"desc":"example parameters"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"Cloud::Services::AWS::EC2":{},"Cloud::Services::OpenStack":{},"Cloud::Services::VMWare":{},"Demo::SimpleApplication":{},"cfengine":{"version":"3.5.0"},"os":[{"linux":"All Linux distributions"}]},"description":"Deploy a full infrastructure for a simple application","license":"MIT","name":"Demo::SimpleApplication::Deploy","tags":["vmware","ensure","deploy","demo","sketchify_generated","enterprise_compatible"],"version":"1.1"},"namespace":"cfdc_simpleapplication"}
libraries/copbl {"api":{},"interface":["cfengine_stdlib.cf"],"manifest":{"README.md":{"documentation":true},"cfengine_stdlib.cf":{"desc":"COPBL"},"test.pl":{"test":true}},"metadata":{"authors":["CFEngine AS","ahdinosaur"],"depends":{"cfengine":{"version":"3.4.0"}},"description":"The portions of the CFEngine standard library (also known as COPBL) that are compatible with 3.4.0 releases","license":"LGPL","name":"CFEngine::stdlib","tags":["cfdc"],"version":111},"namespace":null}
libraries/dclib {"api":{},"interface":["library.cf"],"manifest":{"README.md":{"documentation":true},"dctest.pm":{"desc":"testing utilities"},"library.cf":{"desc":"Design Center stdlib"},"test.pl":{"test":true}},"metadata":{"authors":["CFEngine AS"],"depends":{"cfengine":{"version":"3.4.0"}},"description":"Design Center standard library","license":"MIT","name":"CFEngine::dclib","tags":["cfdc","stdlib"],"version":"1.0.0"}}
libraries/dclib-3.5.0 {"api":{},"interface":["library.cf"],"manifest":{"README.md":{"documentation":true},"library.cf":{"desc":"Design Center stdlib"},"test.pl":{"test":true}},"metadata":{"authors":["CFEngine AS"],"depends":{"cfengine":{"version":"3.5.0"}},"description":"Design Center standard library for CFEngine 3.5.0 and higher","license":"MIT","name":"CFEngine::dclib::3.5.0","tags":["cfdc","stdlib"],"version":"3.5.0"},"namespace":"cfdc_dclib_350"}
package_management/packages_installed {"api":{"installed":[{"name":"","single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Packages that should be installed","example":"apache2, zsh","name":"pkgs_add","type":"list","validation":"LIST_OF_PACKAGE_NAME"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file","version":"1.0.0"},"params/demo.json":{"desc":"example parameters"},"test.cf":{"desc":"example policy"},"test.pl":{"test":true}},"metadata":{"authors":["Eystein Stenberg <eystein.maloy.stenberg@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":[{"centos":"CentOS","debian":"Debian","redhat":"Red Hat","ubuntu":"Ubuntu"}]},"description":"Ensure certain packages are installed. The networked package manager of the OS (e.g. yum or aptitude) is used to perform installations, so the packages need to be available in its package repository.","license":"MIT","name":"Packages::installed","tags":["cfdc","packages","enterprise_compatible"],"version":"1.0.0"},"namespace":"cfdc_packages"}
utilities/staging {"api":{"stage":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Directory where the content can be found.","name":"source_dir","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"description":"Directory where the content will be installed.","name":"dest_dir","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"description":"Owner of the dest_dir after staging.","name":"owner","type":"string","validation":"USERNAME_UNIX"},{"description":"Owner of the dest_dir after staging.","name":"group","type":"string","validation":"USERNAME_UNIX"},{"description":"Directory mode to install.","name":"dirmode","type":"string","validation":"DIGITS"},{"description":"File mode to install.","name":"filemode","type":"string","validation":"DIGITS"},{"default":{"excluded":[".cvs",".svn",".subversion",".git",".bzr"],"postcommand":"/bin/echo postcommand","precommand":"/bin/echo precommand"},"description":"Staging options.","name":"options","type":"array"},{"name":"staged","type":"return"},{"name":"directory","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"Demo parameters."},"test.cf":{"comment":"Test Policy"},"test.pl":{"test":true}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.5.0"}},"description":"Stage a directory of content to a target directory.","license":"MIT","name":"Utilities::Staging","tags":["cfdc","stage","directory","rsync"],"version":1},"namespace":"cfdc_staging"}
utilities/triggers_github {"api":{"github":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Base URL of Github repo, e.g. https://github.com/cfengine/vagrant-cfe","name":"url","type":"string"},{"default":"master","description":"branch of Github repo","name":"branch","type":"string"},{"description":"S3 bucket to deploy into","name":"s3_bucket","type":"string"},{"default":"~/.netrc","description":"netrc file, see README.md","name":"netrc","type":"string"}]},"interface":["github.cf"],"manifest":{"README.md":{"documentation":true},"github.cf":{"desc":"main file"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::stdlib":{},"Cloud::Services::AWS::S3":{},"VCS::vcs_mirror":{},"cfengine":{"version":"3.5.1"},"os":[{"linux":"All versions of Linux"}]},"description":"Trigger behavior from a Github Atom feed to deploy to S3","license":"MIT","name":"Data::Triggers::Github","tags":["classes","trigger","notification","github","sketchify_generated","persistent","enterprise_compatible"],"version":"1.0"},"namespace":"cfdc_triggers"}
utilities/triggers_jenkins {"api":{"jenkins":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Path to Jenkins signalling module, see README.md","name":"module_run","type":"string"},{"description":"Namespace of Jenkins signalling module, see README.md","name":"module_namespace","type":"string"},{"description":"Directory in the Jenkins workspace to deploy, see README.md","name":"source_suffix","type":"string"},{"description":"Destination for build artifacts, see README.md","name":"destination","type":"string"}]},"interface":["jenkins.cf"],"manifest":{"README.md":{"documentation":true},"jenkins.cf":{"desc":"main file"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::stdlib":{},"Utilities::Staging":{},"cfengine":{"version":"3.5.1"},"os":[{"linux":"All versions of Linux"}]},"description":"Trigger behavior from a Jenkins successful build to stage some artifacts","license":"MIT","name":"Data::Triggers::Jenkins","tags":["classes","trigger","notification","sketchify_generated","jenkins","persistent","enterprise_compatible"],"version":"1.0"},"namespace":"cfdc_triggers"}
utilities/vcs_mirror {"api":{"mirror":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"vcs","type":"string"},{"name":"path","type":"string"},{"name":"origin","type":"string"},{"name":"branch","type":"string"},{"name":"options","type":"array"},{"name":"deploy_path","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file","version":1.12},"params/cfengine-copbl.json":{"comment":"Sample parameters to use Git to check out the CFEngine standard library (COPBL) into /tmp/cfengine-copbl"},"params/cfengine-core-runas-tzz.json":{"comment":"Same as cfengine-core.json, but runs as user 'tzz'"},"params/cfengine-core.json":{"comment":"Sample parameters to use Git to check out the CFEngine core into /tmp/cfengine-core"},"params/thrift-lib-perl.json":{"comment":"Sample parameters to use Subversion to check out the Thrift Perl libraries into /tmp/thrift-lib-perl"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{"version":"1.0.0"},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.5.0"},"os":{"linux":"All Linux distributions"}},"description":"Check out and update a VCS repository.","license":"MIT","name":"VCS::vcs_mirror","tags":["cfdc","enterprise_compatible"],"version":1.12},"namespace":"cfdc_vcs"}
