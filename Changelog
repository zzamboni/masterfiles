January 2013
- fixed to pull CFEngine modules on Windows
- tried to use $(sys.workdir) instead of a fixed path /var/cfengine to flavour Windows
- removed kill signal from cf-monitord. left only term signal. It was more than enough
- added canonify() to problematic handles promises
- no more copy binary to /usr/local/sbin but create symlinks instead

December 2012
- renamed failsafe/failsafe.cf to update/update.cf
- moved update/update.cf to root directory
- bumped up version to 3.0.1

October 2012
- restructure masterfiles for Enterprise 3.0.0 framework

February 2012
*update.cf*
- Use u_rcp instead of u_dcp to copy cf_promises_validated, robust to clock skew
- Ignore .git directory as well for downloads

November 2011
*update.cf*
- add classes => u_if_repaired("stopped_cfprocs"); to Windows in order to ensure the self-upgrade would work properly
- all 32-bit Redhat-related distros seemed to be a problem, fixed in the policy level

October 2011
*failsafe.cf*
- unset LD_LIBRARY_PATH for all distributions
*update.cf*
- fixed Solaris/Solarisx86 self-upgrade
- removed community-related promises as we decided to separate Nova and CFE default policy
- added aix self-upgrade (certified by Matt)
- fixed 32-bit RHEL4 self-upgrade
- fixed cf-serverd get killed when upgrade

August 2011
*All*
- Chopped down promises for HUB from cfengine.cf to hub_specific.cf
- Moved "bundle agent cfengine_management" from promises.cf to hub_specific.cf to make ease in policy upgrade in the future
- Added a prefix CFE_ to cfengine.cf, knowledge.cf and hub_specific.cf
- Removed *-devel packages from package-to-install list
- Removed all mysql-related promises from CFE_hub_specific.cf
- Fixed redhat_6 json, svn php modules in CFE_hub_specific.cf
- Set ifelapsed to 1 both promises.cf and failsafe.cf
- Changed detect_all_change to diff in file_change.cf

July 2011
*All*
- Rewrote many files as we decided to have bootstrap feature in Community version
- Separated CFE Nova agent bundles to commercial_specific.cf (from cfengine.cf)
- Moved unused agent bundles to miscellaneous.cf
- Changed "cf-know -sg" to "cf-know -b"
- "commercial_customer" or => { "nova_edition", "constellation_edition" } added
- limited "cf-execd" upto 2 processes in case SA wants to run "cf-execd -F"
- Supported Community self-upgrade (cfengine-community)
- Added exclude_dirs => { "\.svn" }; not to download version control hiddend directory in update.cf
- Separated php-mcrypt from CentOS on RHEL5


June 2011
*cfengine.cf*
- Removed selinux test by file existance, testing on command return value on Red Hat only now
- Not restarting all Cfengine components by default, can be turned on if desirable
- $(sys.doc_root)/graphs will be created during bootstrap process
*promises.cf*
- Only allow policy hub to query reports
*update.cf*
- Fixed self-upgrade policy for all supported distributions

April 2011
*cfengine.cf*
- Changed bundle agent cfengine_limit_cfexecd to cfengine_limit_robot_agents to monitoring cf-execd, cf-monitord and cf-hub processes
*promises.cf*
- Fixed cfengine_limit_robot_agents in cfengine_management, methods::

March 2011
*cfengine.cf*
- Decreased/locked number of cf-execd and cf-monitord when they come undone to only 1 process
- Added debian_6 class to NovaBase. It seemed like the newer version of debian reported either debian_squeeze or debian_6
- setenforce not flagged as promise not repaired when returning 1
*knowledge.cf*
- Added contain => "silent", to $(sys.cf_promises -r). It was too noisy.
- removed stale */graphs promises
- removed hostsseen function on hub - not needed in Nova 2 and made very slow DNS lookups
*update.cf*
- Added --bind_ip to mongod to accept only localhost connections
- Improved u_generic package_mothod body to support NetBSD
- Added u_in_shell_and_silent body to silient "cf-promises -r" command
- Fixed Nova self-update for *BSD system by adding "*" to package_architectures
- Fixed Nova self-update again for Redhat/SuSE by adding package_list_arch_regex to package_method
- Added package_method for NetBSD to u_generic
- mongdb lock file purge when process not running
*promises.cf*
- replaced policy_host class with built-in am_policy_hub
