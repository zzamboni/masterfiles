###############################################################################
#
#   promises.cf - Basic Policy for Enterprise version
#
###############################################################################

body common control

{

 bundlesequence => {

                  # Common bundle first (Best Practice)
                    "def",
                    "cfe_internal_hub_vars",
                  # Design Center
                    "cfsketch_run",

                  # Agent bundle
                    "cfe_internal_management",   # See cfe_internal/CFE_cfengine.cf
                    "service_catalogue",
                    "example_use_goals",         # See cfe_internal/example_use_goals.cf

                   };

         inputs => {

                  # File definition for global variables and classes
                    "def.cf",

                  # Design Center
                  # MARKER FOR CF-SKETCH INPUT INSERTION
                    "sketches/meta/api-runfile.cf",
                    @(cfsketch_g.inputs),

                  # CFEngine internal processes for Mission Portal mostly
                    "cfe_internal/CFE_cfengine.cf",
                    "cfe_internal/CFE_hub_specific.cf",
                    "cfe_internal/CFE_knowledge.cf",
                    "cfe_internal/example_use_goals.cf",

                  # Control body for all CFEngine robot agents
                    "controls/cf_agent.cf",
                    "controls/cf_execd.cf",
                    "controls/cf_hub.cf",
                    "controls/cf_monitord.cf",
                    "controls/cf_runagent.cf",
                    "controls/cf_serverd.cf",

                  # COPBL and custom body/bundle library
                    @(cfengine_stdlib.inputs),

                  # Add update files to build Knowledge Map relationship
                    "update/update_bins.cf",
                    "update/update_policy.cf",
                    "update/update_processes.cf",

                  # List of services here
                    "services/file_change.cf",

                   };

   version => "Promises.cf 3.0.3";

#   goal_categories => { "goals", "targets", "milestones" };
#   goal_patterns   => { "goal_.*", "target.*","milestone.*" };

}



bundle common cfengine_stdlib
{
  vars:
    cfengine_3_4::
      "inputs" slist => { "libraries/cfengine_stdlib.cf" };
    cfengine_3_5::
      "inputs" slist => {
                          "lib/3.5/paths.cf",
                          "lib/3.5/common.cf",
                          "lib/3.5/commands.cf",
                          "lib/3.5/packages.cf",
                          "lib/3.5/files.cf",
                          "lib/3.5/services.cf",
                          "lib/3.5/processes.cf",
                          "lib/3.5/storage.cf",
                          "lib/3.5/databases.cf",
                          "lib/3.5/monitor.cf",
                          "lib/3.5/guest_environments.cf",
                          "lib/3.5/bundles.cf",
      };

    !(cfengine_3_4||cfengine_3_5)::
      "inputs" slist => {
                          "lib/$(sys.cf_version_major).$(sys.cf_version_minor)/paths.cf",
                          "lib/$(sys.cf_version_major).$(sys.cf_version_minor)/common.cf",
                          "lib/$(sys.cf_version_major).$(sys.cf_version_minor)/commands.cf",
                          "lib/$(sys.cf_version_major).$(sys.cf_version_minor)/packages.cf",
                          "lib/$(sys.cf_version_major).$(sys.cf_version_minor)/files.cf",
                          "lib/$(sys.cf_version_major).$(sys.cf_version_minor)/services.cf",
                          "lib/$(sys.cf_version_major).$(sys.cf_version_minor)/processes.cf",
                          "lib/$(sys.cf_version_major).$(sys.cf_version_minor)/storage.cf",
                          "lib/$(sys.cf_version_major).$(sys.cf_version_minor)/databases.cf",
                          "lib/$(sys.cf_version_major).$(sys.cf_version_minor)/monitor.cf",
                          "lib/$(sys.cf_version_major).$(sys.cf_version_minor)/guest_environments.cf",
                          "lib/$(sys.cf_version_major).$(sys.cf_version_minor)/bundles.cf",
      };
}


###############################################################################
#
# bundle agent service_catalogue
#  - general purposes of usage
#
###############################################################################

bundle agent service_catalogue

{							 

 methods:

  any::

   "security" -> { goal_infosec, goal_compliance }
                  comment => "Basic change management",
                   handle => "service_catalogue_change_management",
                usebundle => change_management;

}
